export const examples: Record<string, string> = {
WhatWord:
`
‚Üì ‚å®Ô∏è

‚Ä¢GameState(playing‚Ä¢? guesses‚Ä¢[""] secret‚Ä¢""‚à®!)
(
    guessesRemaining: ∆í() secret.length * 2 - guesses.length
    won: ∆í() secret‚Üí[].every(∆í(letter) guesses.has(letter))
    lost: ∆í() guessesRemaining < 0
)

words: ['kitty' 'house' 'heat' 'fart' 'townhouse' 'heatwave']

state: GameState(‚ä• [] !) 
    ‚àÜ ‚å®Ô∏è 
        ‚å®Ô∏è.key = "Space"  ? GameState(‚ä§ [] words.random())
        ‚å®Ô∏è.key = "Escape" ? GameState(‚ä• [] !)
        GameState(‚ä§ guesses + ‚å®Ô∏è.key state.secret)
    ‚àÜ üñ±‚¨áÔ∏è ‚àß ¬¨ state.playing
        GameState(‚ä§ [] words.random())

title: ∆í(‚Ä¶messages‚Ä¢"") Group(layout:centered size:16pt messages.map(∆í(m) Sentence(message)))

Verse(
    font: "Noto Sans"
    size: 12pt
    state.playing ? 
        (   
            state.lost() ? title("You lost. Press space to play again.")
            state.won() ? title("You won, nice job! Press space to play again.")
            Group(
                layout: centered
                Sentence(size: 24pt text: state.secret‚Üí[].every(∆í(letter) guesses.has(letter) ? letter "_").join(' '))
                Sentence(size: 16pt "Guesses: /state.guesses.join(' ')/")
                Sentence(size: 12pt "/state.guessesRemaining()/ remaining")
            )
        )
        title("Welcome to WhatWord!" "Press space to begin...")
)
`,
AnimatedFace: 
`
‚Üì‚è±
ü•π: {‚ä§: ¬´üòÄ¬ª ‚ä•: ¬´üòÇ¬ª}
‚à•: ‚è± % 2 = 0ms
Sentence(ü•π{‚à•} 32pt ¬´Noto Sans¬ª)
`
};