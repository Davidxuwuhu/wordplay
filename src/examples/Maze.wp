=== Maze/en
`
A maze is a 2D grid of emoji, with some functions for checking the state at particular grid postions.
Mazes are generated randomly.
`/en
•Maze() (
	grid: 
		[
			[ '🎬' '❤️' '❌'   ø    ø]
			[ '❤️'   ø    ø    ø    ø]
			[ '🐈' '😀' '💬' '🫥' '😞']
			[   ø  '👍'  ø    ø   '😕']
			[ '🛑' '🥹'  ø   '😫' '😡']
    	]
 
	ƒ cell(row•# column •#) (
		cells: grid[row]
		cells•ø ? ø cells[column] 
	)

	ƒ allowed(row•# column•#) cell(row column)•''
)

maze: Maze()

•State(row•# column•# steps•#) 
(
	ƒ down() State(row + 1 column steps + 1)
	ƒ up() State(row - 1 column steps + 1)
	ƒ left() State(row column - 1 steps + 1)
	ƒ right() State(row column + 1 steps + 1)
)

direction: choice()
state•State:  ∆ direction ? State(1 1 0) …
		((direction = "left") & maze.allowed(state.row state.column - 1)) ? state.left()
			((direction = "right") & maze.allowed(state.row state.column + 1)) ? state.right()
				((direction = "up") & maze.allowed(state.row - 1 state.column)) ? state.up()
					((direction = "down") & maze.allowed(state.row + 1 state.column)) ? state.down()
						state

current: ( cell: maze.cell(state.row state.column) cell•ø ? ' ' cell)
up: ( cell: maze.cell(state.row - 1 state.column) cell•ø ? ' ' '↑')
down: ( cell: maze.cell(state.row + 1 state.column) cell•ø ? ' ' '↓')
left: ( cell: maze.cell(state.row state.column - 1) cell•ø ? ' ' '←')
right: ( cell: maze.cell(state.row state.column + 1) cell•ø ? ' ' '→')

Verse(
	[
		Group(
			Row(0m) 
			[
				Group(
					Stack(0m) 
					[
						💬(' ')
						💬(left name: 'left')
						💬(' ')
						💬(' ')
					]
				)				 
				Group(
					Stack(0m) 
					[
						💬(up name: 'up')
						💬(current)
						💬(down name: 'down')
						💬(current = '🛑' ? 'Yay!' state.steps → '' font: "Poor Story")
					]
				)
				Group(
					Stack(0m) 
					[
						💬(' ')
						💬(right name: 'right')
						💬(' ')
						💬(' ')
					]
				)
			]
	  )
	]
  	place: Place(0m 0m -3m)
	font: 'Noto Emoji'
)