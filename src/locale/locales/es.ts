import type Locale from '../Locale';

const es: Locale = {
    language: 'es',
    wordplay: 'PalabraJugar',
    tbd: 'no escrito',
    welcome: 'hola',
    motto: 'Donde las palabras cobran vida',
    terminology: {
        store: 'datos',
        decide: 'decidir',
        code: 'código',
        project: 'función',
        source: 'fuente',
        input: 'input',
        output: 'producción',
        act: 'acto',
        scene: 'escena',
        phrase: 'frase',
        group: 'grupo',
        verse: 'verso',
        type: 'género',
        start: 'comenzar',
        entered: 'ingresó',
        changed: 'cambiada',
        name: 'nombre',
    },
    caret: {
        before: 'antes de $1',
        inside: 'dentro de $1',
    },
    data: {
        value: 'avaluar',
        text: 'texto',
        boolean: 'booleano',
        map: 'par',
        measurement: 'número',
        function: 'función',
        exception: 'excepción',
        table: 'tabla',
        none: 'ninguna',
        list: 'lista',
        stream: 'arroyo',
        structure: 'estructura',
        streamdefinition: 'arroyo definición',
        index: 'índice',
        query: 'interrogante',
        row: 'hilera',
        set: 'set',
        key: 'clave',
    },
    evaluation: {
        unevaluated: 'el nodo seleccionado no evaluó',
        done: 'terminado de evaluar',
    },
    token: {
        EvalOpen: 'evaluación abierta',
        EvalClose: 'evaluación cerrar',
        SetOpen: 'recopilación/índice abierta',
        SetClose: 'recopilación/índice cerrar',
        ListOpen: 'lista abierta',
        ListClose: 'lista cerrar',
        TagOpen: 'etiqueta abierta',
        TagClose: 'cerrar etiqueta',
        Bind: 'nombrar',
        Access: 'acceso a la propiedad',
        Function: 'función',
        Borrow: 'pedir prestado',
        Share: 'compartir',
        Convert: 'convertir',
        Doc: 'documentación',
        Words: 'palabras',
        Link: 'enlace web',
        Italic: 'itálica',
        Underline: 'rayar',
        Light: 'ligero',
        Bold: 'negrita',
        Extra: 'extra',
        Concept: 'enlace de concepto',
        URL: 'URL',
        ExampleOpen: 'ejemplo abierta',
        ExampleClose: 'ejemplo cerrar',
        None: 'nada',
        Type: 'tipo',
        TypeOperator: 'es',
        TypeOpen: 'tipo entrada abierta',
        TypeClose: 'escribir entrada cerrar',
        Separator: 'separadora de nombres',
        Language: 'etiqueta de idioma',
        BooleanType: 'tipo booleano',
        NumberType: 'tipo de número',
        JapaneseNumeral: 'número japonés',
        RomanNumeral: 'número romana',
        Pi: 'pi',
        Infinity: 'infinidad',
        NoneType: 'ninguno tipo',
        TableOpen: 'table abierta',
        TableClose: 'tabla cerrada',
        Select: 'seleccionar',
        Insert: 'insertar',
        Update: 'actualizar',
        Delete: 'borrar',
        Union: 'unión',
        Stream: 'próxima',
        Change: 'cambiar',
        Initial: 'primera evaluacion',
        Previous: 'previa',
        Placeholder: 'marcador de posición',
        Etc: 'etcétera',
        This: 'esta',
        UnaryOperator: 'operador unario',
        BinaryOperator: 'operadora binaria',
        Conditional: 'condicional',
        Text: 'texto',
        TemplateOpen: 'texto abierta',
        TemplateBetween: 'texto entre',
        TemplateClose: 'texto cerrada',
        Number: 'número',
        Decimal: 'número decimal',
        Base: 'numeral base',
        Boolean: 'booleano',
        Name: 'nombre',
        Unknown: 'desconocida',
        End: 'final',
    },
    node: {
        Dimension: {
            name: 'dimensión',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        Doc: {
            name: 'documentación',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        Docs: {
            name: 'lista de documentación',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        KeyValue: {
            name: 'par clave/valor',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        Language: {
            name: 'lengua',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        Name: {
            name: 'nombre',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        Names: {
            name: 'lista de nombres',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        Row: {
            name: 'la hilera',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        Token: {
            name: 'token',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        TypeInputs: {
            name: 'lista de variable de tipo',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        TypeVariable: {
            name: 'variable de tipo',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        TypeVariables: {
            name: 'lista de variable de tipo',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        Paragraph: {
            name: 'párrafo',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        WebLink: {
            name: 'enlace',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        ConceptLink: {
            name: 'concepto',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        Words: {
            name: 'palabras',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        Example: {
            name: 'ejemplo',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        BinaryOperation: {
            name: 'operación binaria',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            right: 'input',
            start: '$?',
            finish: '$?',
        },
        Bind: {
            name: 'nombrar',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        Block: {
            name: 'block',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            statement: '$?',
            start: '$?',
            finish: '$?',
        },
        BooleanLiteral: {
            name: 'boolean',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
        },
        Borrow: {
            name: 'pedir prestado',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            source: '$?',
            bind: '$?',
            version: '$?',
        },
        Changed: {
            name: 'Cambiada',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            stream: '$?',
        },
        Conditional: {
            name: 'condicional',
            description: '',
            emotion: 'neutral',
            doc: `¿Alguna vez pensaste en cómo decidimos?
            Pienso mucho en eso.
            Tantas decisiones en la vida pueden ser tan complicadas.
            A veces siento mucha presión para decidir, ya que soy el único en este mundo que puede decidir.
           
            Me siento abrumado, así que he tratado de simplificar las cosas.
            Primero, solo considero dos opciones: ⧼⊤⧽ y ⧼⊥⧽.
            Si es ⧼⊤⧽, entonces evalúo mi código *sí*. Si es ⧼⊥⧽, entonces evalúo mi código *no*.

            Sé que las decisiones rara vez son tan simples, pero dividir el mundo en estos binarios me facilita las cosas.
            Sí, no, si, si no, esto, aquello.
            Es mi pequeña forma de mantener las cosas organizadas, incluso ante tanta complejidad.
            `,
            start: '$?',
            finish: '$?',
            condition: '$?',
            yes: '$?',
            no: '$?',
        },
        ConversionDefinition: {
            name: 'conversión',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
        },
        Convert: {
            name: 'convertir',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        Delete: {
            name: 'delete row',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        DocumentedExpression: {
            name: 'expresión documentada',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
        },
        Evaluate: {
            name: 'evaluar',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
            function: '$?',
            input: '$?',
        },
        ExpressionPlaceholder: {
            name: 'marcador de posición',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            placeholder: '$?',
        },
        FunctionDefinition: {
            name: 'función',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
        },
        HOF: {
            name: 'función de orden superior',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        Initial: {
            name: 'evaluación inicial',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        Insert: {
            name: 'insertar',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        Is: {
            name: 'es',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        ListAccess: {
            name: 'acceso a la lista',
            description: '',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        ListLiteral: {
            name: 'lista',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
            item: '$?',
        },
        MapLiteral: {
            name: 'índice',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        MeasurementLiteral: {
            name: 'número',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
        },
        NativeExpression: {
            name: 'expresión incorporada',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
        },
        NoneLiteral: {
            name: 'nada',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
        },
        Previous: {
            name: 'previa',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        Program: {
            name: 'programa',
            description: '',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        PropertyBind: {
            name: 'refinar',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        PropertyReference: {
            name: 'acceso a la propiedad',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
            property: 'propiedad',
        },
        Reaction: {
            name: 'reacción',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
            initial: 'inicial',
            condition: 'condición',
            next: 'próxima',
        },
        Reference: {
            name: 'referencia',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
        },
        Select: {
            name: 'seleccionar',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        SetLiteral: {
            name: 'recopilación',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        SetOrMapAccess: {
            name: 'acceso al conjunto/mapa',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        Source: {
            name: 'documento',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        StreamDefinition: {
            name: 'arroyo',
            description: '$?',
            emotion: 'neutral',
            doc: `defines a stream of values.`,
            start: 'define this stream type',
        },
        StructureDefinition: {
            name: 'estructura',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: 'define this structure type',
        },
        TableLiteral: {
            name: 'tabla',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            item: 'row',
            start: 'first evaluate the rows',
            finish: '$?',
        },
        Template: {
            name: 'plantilla de texto',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        TextLiteral: {
            name: 'texto',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
        },
        This: {
            name: 'esta',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
        },
        UnaryOperation: {
            name: 'operación unaria',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        UnparsableExpression: {
            name: 'no analizable',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: 'cannot evaluate unparsable code',
        },
        Update: {
            name: 'update rows',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
            start: '$?',
            finish: '$?',
        },
        AnyType: {
            name: 'tipo de cualquier',
            description: '',
            emotion: 'neutral',
            doc: '$?',
        },
        BooleanType: {
            name: 'tipo de booleano',
            description: '',
            emotion: 'neutral',
            doc: '$?',
        },
        ConversionType: {
            name: 'tipo de conversión',
            description: '',
            emotion: 'neutral',
            doc: '$?',
        },
        ExceptionType: {
            name: 'tipo de excepción',
            description: '',
            emotion: 'neutral',
            doc: '$?',
        },
        FunctionDefinitionType: {
            name: 'tipo de función',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        FunctionType: {
            name: 'tipo de función',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        ListType: {
            name: 'tipo de lista',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        MapType: {
            name: 'tipo de índice',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        MeasurementType: {
            name: 'tipo de número',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        NameType: {
            name: 'tipo de nombre',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        NeverType: {
            name: 'tipo de nunca',
            description: '',
            emotion: 'neutral',
            doc: '$?',
        },
        NoneType: {
            name: 'tipo de nada',
            description: '',
            emotion: 'neutral',
            doc: '$?',
        },
        SetType: {
            name: 'tipo de recopilación',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        StreamDefinitionType: {
            name: 'streamtipo de arroyo',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        StreamType: {
            name: 'streamtipo de arroyo',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        StructureDefinitionType: {
            name: 'tipo de estructura',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        UnknownType: {
            name: 'desconocida',
            description: '$?',
            unknown: '$?',
            connector: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        TableType: {
            name: 'tipo de tabla',
            description: '',
            emotion: 'neutral',
            doc: '$?',
        },
        TextType: {
            name: 'tipo de texto',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        TypePlaceholder: {
            name: 'tipo de marcador de posición',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        UnionType: {
            name: 'tipo de opción',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        Unit: {
            name: 'unidad de medida',
            description: '$1',
            emotion: 'neutral',
            doc: '$?',
        },
        UnparsableType: {
            name: 'tipo no analizable',
            description: '',
            emotion: 'neutral',
            doc: '$?',
        },
        VariableType: {
            name: 'tipo variable',
            description: '',
            emotion: 'neutral',
            doc: '$?',
        },
        CycleType: {
            name: 'tipo de ciclo',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        UnknownVariableType: {
            name: 'tipo de variable desconocido',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        NotAType: {
            name: 'tipo sin lista',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
        NoExpressionType: {
            name: 'tipo sin expresión',
            description: '',
            emotion: 'neutral',
            doc: '$?',
        },
        NotEnclosedType: {
            name: 'no en estructura, conversión o reacción',
            description: '',
            emotion: 'neutral',
            doc: '$?',
        },
        NotImplementedType: {
            name: 'typo sin implementado',
            description: '',
            emotion: 'neutral',
            doc: '$?',
        },
        UnknownNameType: {
            name: 'tipo de nombre desconocido',
            description: '$?',
            emotion: 'neutral',
            doc: '$?',
        },
    },
    native: {
        bool: {
            doc: '$?',
            name: 'bool',
            function: {
                and: {
                    doc: '$?',
                    name: 'y',
                    inputs: [{ doc: '$?', names: 'value' }],
                },
                or: {
                    doc: '$?',
                    name: 'o',
                    inputs: [{ doc: '$?', names: 'value' }],
                },
                not: {
                    doc: '$?',
                    name: 'no',
                    inputs: [],
                },
                equals: {
                    doc: '$?',
                    name: 'igual',
                    inputs: [{ doc: '$?', names: 'value' }],
                },
                notequal: {
                    doc: '$?',
                    name: 'noIgual',
                    inputs: [{ doc: '$?', names: 'value' }],
                },
            },
            conversion: {
                text: '$?',
            },
        },
        none: {
            doc: '$?',
            name: 'none',
            function: {
                equals: {
                    doc: '$?',
                    name: ['=', 'equals'],
                    inputs: [{ doc: '$?', names: 'value' }],
                },
                notequals: {
                    doc: '$?',
                    name: '≠',
                    inputs: [{ doc: '$?', names: 'value' }],
                },
            },
            conversion: {
                text: '$?',
            },
        },
        text: {
            doc: '$?',
            name: 'text',
            function: {
                length: {
                    doc: '$?',
                    name: 'length',
                    inputs: [],
                },
                equals: {
                    doc: '$?',
                    name: ['=', 'equals'],
                    inputs: [{ doc: '$?', names: 'value' }],
                },
                notequals: {
                    doc: '$?',
                    name: '≠',
                    inputs: [{ doc: '$?', names: 'value' }],
                },
                repeat: {
                    doc: '$?',
                    name: 'repetir',
                    inputs: [{ doc: '$?', names: 'contar' }],
                },
                segment: {
                    doc: '$?',
                    name: ['segmentar'],
                    inputs: [{ doc: '$?', names: 'delimitador' }],
                },
                combine: {
                    doc: '$?',
                    name: 'combinar',
                    inputs: [{ doc: '$?', names: 'texto' }],
                },
                has: {
                    doc: '$?',
                    name: ['tiene'],
                    inputs: [{ doc: '$?', names: 'texto' }],
                },
            },
            conversion: {
                text: '$?',
                number: '$?',
            },
        },
        measurement: {
            doc: '$?',
            name: 'number',
            function: {
                add: {
                    doc: '$?',
                    name: 'add',
                    inputs: [{ doc: '$?', names: 'number' }],
                },
                subtract: {
                    doc: '$?',
                    name: 'subtract',
                    inputs: [{ doc: '$?', names: 'number' }],
                },
                multiply: {
                    doc: '$?',
                    name: 'multiplicar',
                    inputs: [{ doc: '$?', names: 'number' }],
                },
                divide: {
                    doc: '$?',
                    name: ['÷', 'divide'],
                    inputs: [{ doc: '$?', names: 'number' }],
                },
                remainder: {
                    doc: '$?',
                    name: 'remainder',
                    inputs: [{ doc: '$?', names: 'number' }],
                },
                truncate: {
                    doc: '$?',
                    name: ['truncate'],
                    inputs: [{ doc: '$?', names: 'number' }],
                },
                absolute: {
                    doc: '$?',
                    name: ['absolute'],
                    inputs: [{ doc: '$?', names: 'number' }],
                },
                power: {
                    doc: '$?',
                    name: ['^', 'power'],
                    inputs: [{ doc: '$?', names: 'number' }],
                },
                root: {
                    doc: '$?',
                    name: ['√', 'root'],
                    inputs: [{ doc: '$?', names: 'number' }],
                },
                lessThan: {
                    doc: '$?',
                    name: ['<', 'lessthan'],
                    inputs: [{ doc: '$?', names: 'number' }],
                },
                lessOrEqual: {
                    doc: '$?',
                    name: ['≤', 'lessorequal'],
                    inputs: [{ doc: '$?', names: 'number' }],
                },
                greaterThan: {
                    doc: '$?',
                    name: ['>', 'greaterthan'],
                    inputs: [{ doc: '$?', names: 'number' }],
                },
                greaterOrEqual: {
                    doc: '$?',
                    name: ['≥', 'greaterorequal'],
                    inputs: [{ doc: '$?', names: 'number' }],
                },
                equal: {
                    doc: '$?',
                    name: 'equal',
                    inputs: [{ doc: '$?', names: 'number' }],
                },
                notequal: {
                    doc: '$?',
                    name: '≠',
                    inputs: [{ doc: '$?', names: 'number' }],
                },
                cos: {
                    doc: '$?',
                    name: ['cos', 'cosine'],
                    inputs: [],
                },
                sin: {
                    doc: '$?',
                    name: ['sin', 'sine'],
                    inputs: [],
                },
            },
            conversion: {
                text: '$?',
                list: '$?',
                s2m: '$?',
                s2h: '$?',
                s2day: '$?',
                s2wk: '$?',
                s2year: '$?',
                s2ms: '$?',
                ms2s: '$?',
                min2s: '$?',
                h2s: '$?',
                day2s: '$?',
                wk2s: '$?',
                yr2s: '$?',
                m2pm: '$?',
                m2nm: '$?',
                m2micro: '$?',
                m2mm: '$?',
                m2cm: '$?',
                m2dm: '$?',
                m2km: '$?',
                m2Mm: '$?',
                m2Gm: '$?',
                m2Tm: '$?',
                pm2m: '$?',
                nm2m: '$?',
                micro2m: '$?',
                mm2m: '$?',
                cm2m: '$?',
                dm2m: '$?',
                km2m: '$?',
                Mm2m: '$?',
                Gm2m: '$?',
                Tm2m: '$?',
                km2mi: '$?',
                mi2km: '$?',
                cm2in: '$?',
                in2cm: '$?',
                m2ft: '$?',
                ft2m: '$?',
                g2mg: '$?',
                mg2g: '$?',
                g2kg: '$?',
                kg2g: '$?',
                g2oz: '$?',
                oz2g: '$?',
                oz2lb: '$?',
                lb2oz: '$?',
            },
        },
        list: {
            doc: '$?',
            name: 'list',
            kind: 'Kind',
            out: 'Result',
            outofbounds: 'outofbounds',
            function: {
                add: {
                    doc: '$?',
                    name: 'agregar',
                    inputs: [{ doc: '$?', names: 'item' }],
                },
                append: {
                    doc: '$?',
                    name: 'adjuntar',
                    inputs: [{ doc: '$?', names: 'list' }],
                },
                replace: {
                    doc: '$?',
                    name: ['reemplazar'],
                    inputs: [
                        { doc: '$?', names: 'index' },
                        { doc: '$?', names: 'value' },
                    ],
                },
                length: {
                    doc: '$?',
                    name: 'longitud',
                    inputs: [],
                },
                random: {
                    doc: '$?',
                    name: 'azar',
                    inputs: [],
                },
                first: {
                    doc: '$?',
                    name: 'primera',
                    inputs: [],
                },
                last: {
                    doc: '$?',
                    name: 'última',
                    inputs: [],
                },
                has: {
                    doc: '$?',
                    name: 'tiene',
                    inputs: [{ doc: '$?', names: 'item' }],
                },
                join: {
                    doc: '$?',
                    name: 'unirse',
                    inputs: [{ doc: '$?', names: 'separator' }],
                },
                sansFirst: {
                    doc: '$?',
                    name: 'sinPrimero',
                    inputs: [],
                },
                sansLast: {
                    doc: '$?',
                    name: 'sinÚltima',
                    inputs: [],
                },
                sans: {
                    doc: '$?',
                    name: 'sans',
                    inputs: [{ doc: '$?', names: 'value' }],
                },
                sansAll: {
                    doc: '$?',
                    name: 'sinTodo',
                    inputs: [{ doc: '$?', names: 'value' }],
                },
                reverse: {
                    doc: '$?',
                    name: 'inversa',
                    inputs: [],
                },
                equals: {
                    doc: '$?',
                    name: ['=', 'equals'],
                    inputs: [{ doc: '$?', names: 'list' }],
                },
                notequals: {
                    doc: '$?',
                    name: '≠',
                    inputs: [{ doc: '$?', names: 'list' }],
                },
                translate: {
                    doc: '$?',
                    name: 'traducir',
                    inputs: [{ doc: '$?', names: 'translator' }],
                    value: { doc: '$?', names: 'item' },
                    index: { doc: '$?', names: 'index' },
                },
                filter: {
                    doc: '$?',
                    name: 'filtrar',
                    inputs: [{ doc: '$?', names: 'checker' }],
                    value: { doc: '$?', names: 'item' },
                },
                all: {
                    doc: '$?',
                    name: 'todos',
                    inputs: [{ doc: '$?', names: 'checker' }],
                    value: { doc: '$?', names: 'item' },
                },
                until: {
                    doc: '$?',
                    name: 'hasta',
                    inputs: [{ doc: '$?', names: 'checker' }],
                    value: { doc: '$?', names: 'item' },
                },
                find: {
                    doc: '$?',
                    name: 'encontrar',
                    inputs: [{ doc: '$?', names: 'checker' }],
                    value: { doc: '$?', names: 'item' },
                },
                combine: {
                    doc: '$?',
                    name: 'combinar',
                    inputs: [
                        { doc: '$?', names: 'inicial' },
                        { doc: '$?', names: 'combinador' },
                    ],
                    combination: { doc: '$?', names: 'combinación' },
                    next: { doc: '$?', names: 'próxima' },
                    index: { doc: '$?', names: 'índice' },
                },
            },
            conversion: {
                text: '$?',
                set: '$?',
            },
        },
        set: {
            doc: '$?',
            name: 'set',
            kind: 'Kind',
            function: {
                equals: {
                    doc: '$?',
                    name: ['=', 'equals'],
                    inputs: [{ doc: '$?', names: 'set' }],
                },
                notequals: {
                    doc: '$?',
                    name: '≠',
                    inputs: [{ doc: '$?', names: 'set' }],
                },
                add: {
                    doc: '$?',
                    name: ['add', '+'],
                    inputs: [{ doc: '$?', names: 'set' }],
                },
                remove: {
                    doc: '$?',
                    name: ['remove', '-'],
                    inputs: [{ doc: '$?', names: 'set' }],
                },
                union: {
                    doc: '$?',
                    name: ['union', '∪'],
                    inputs: [{ doc: '$?', names: 'set' }],
                },
                intersection: {
                    doc: '$?',
                    name: ['intersection', '∩'],
                    inputs: [{ doc: '$?', names: 'set' }],
                },
                difference: {
                    doc: '$?',
                    name: 'difference',
                    inputs: [{ doc: '$?', names: 'set' }],
                },
                filter: {
                    doc: '$?',
                    name: 'filter',
                    inputs: [{ doc: '$?', names: 'checker' }],
                    value: { doc: '$?', names: 'value' },
                },
                translate: {
                    doc: '$?',
                    name: 'translate',
                    inputs: [{ doc: '$?', names: 'lisetst' }],
                    value: { doc: '$?', names: 'value' },
                },
            },
            conversion: {
                text: '$?',
                list: '$?',
            },
        },
        map: {
            doc: '$?',
            name: 'map',
            key: 'Key',
            value: 'Value',
            result: 'Result',
            function: {
                equals: {
                    doc: '$?',
                    name: ['=', 'equals'],
                    inputs: [{ doc: '$?', names: 'value' }],
                },
                notequals: {
                    doc: '$?',
                    name: '≠',
                    inputs: [{ doc: '$?', names: 'value' }],
                },
                set: {
                    doc: '$?',
                    name: 'set',
                    inputs: [
                        { doc: '$?', names: 'key' },
                        { doc: '$?', names: 'value' },
                    ],
                },
                unset: {
                    doc: '$?',
                    name: 'unset',
                    inputs: [{ doc: '$?', names: 'key' }],
                },
                remove: {
                    doc: '$?',
                    name: 'remove',
                    inputs: [{ doc: '$?', names: 'value' }],
                },
                filter: {
                    doc: '$?',
                    name: 'filter',
                    inputs: [{ doc: '$?', names: 'checker' }],
                    key: { doc: '$?', names: 'key' },
                    value: { doc: '$?', names: 'value' },
                },
                translate: {
                    doc: '$?',
                    name: 'translate',
                    inputs: [{ doc: '$?', names: 'translator' }],
                    key: { doc: '$?', names: 'key' },
                    value: { doc: '$?', names: 'value' },
                },
            },
            conversion: {
                text: '$?',
                set: '$?',
                list: '$?',
            },
        },
    },
    exceptions: {
        blank: '¡Estoy tan emocionada de montar un espectáculo contigo! ¿Por dónde deberíamos empezar?',
        function: '$?',
        name: '$?',
        cycle: '$?',
        functionlimit: '$?',
        steplimit: '$?',
        type: '$?',
        placeholder: '$?',
        unparsable: '$?',
        value: '$?',
    },
    conflict: {
        BorrowCycle: '$?',
        ReferenceCycle: '$?',
        DisallowedInputs: '$?',
        DuplicateName: {
            primary: '$?',
            secondary: '$?',
        },
        DuplicateShare: {
            primary: '$?',
            secondary: '$?',
        },
        DuplicateTypeVariable: {
            primary: '$?',
            secondary: '$?',
        },
        ExpectedBooleanCondition: {
            primary: '$?',
            secondary: '$?',
        },
        ExpectedColumnType: '$?',
        ExpectedEndingExpression: '$?',
        ExpectedSelectName: '$?',
        ExpectedUpdateBind: '$?',
        IgnoredExpression: {
            primary: '$?',
            secondary: '$?',
        },
        IncompleteImplementation: '$?',
        IncompatibleBind: {
            primary: '$?',
            secondary: '$?',
        },
        IncompatibleCellType: {
            primary: '$?',
            secondary: '$?',
        },
        IncompatibleInput: {
            primary: '$?',
            secondary: '$?',
        },
        IncompatibleKey: {
            primary: '$?',
            secondary: '$?',
        },
        ImpossibleType: '$?',
        InputListMustBeLast: '$?',
        InvalidLanguage: '$?',
        InvalidRow: '$?',
        InvalidTypeInput: {
            primary: '$?',
            secondary: '$?',
        },
        MisplacedConversion: '$?',
        MisplacedInput: '$?',
        MisplacedShare: '$?',
        MisplacedThis: '$?',
        MissingCell: {
            primary: '$?',
            secondary: '$?',
        },
        MissingInput: {
            primary: '$?',
            secondary: '$?',
        },
        MissingLanguage: '$?',
        MissingShareLanguages: '$?',
        NoExpression: '$?',
        NotAMap: {
            primary: '$?',
            secondary: '$?',
        },
        NotANumber: '$?',
        NotAnInterface: '$?',
        NotInstantiable: '$?',
        OrderOfOperations: '$?',
        Placeholder: '$?',
        RequiredAfterOptional: '$?',
        UnclosedDelimiter: '$?',
        UnexpectedEtc: '$?',
        UnexpectedInput: {
            primary: '$?',
            secondary: '$?',
        },
        UnexpectedTypeVariable: '$?',
        UnimplementedInterface: '$?',
        UnknownBorrow: '$?',
        UnknownColumn: '$?',
        UnknownConversion: '$?',
        UnknownInput: '$?',
        UnknownName: '$?',
        InvalidTypeName: '$?',
        Unnamed: '$?',
        UnparsableConflict: '$?',
        UnusedBind: '$?',
    },
    step: {
        stream: '$?',
        jump: '$?',
        jumpif: '$?',
        halt: '$?',
        initialize: '$?',
        evaluate: '$?',
        next: '$?',
        check: '$?',
    },
    transform: {
        add: '$?',
        append: '$?',
        remove: '$?',
        replace: '$?',
    },
    ui: {
        placeholders: {
            code: 'code',
            expression: 'value',
            type: 'type',
            percent: 'percent',
            name: 'nombre',
            project: 'untitled',
            email: 'email',
        },
        tooltip: {
            yes: '$?',
            no: '$?',
            play: '$?',
            pause: '$?',
            back: '$?',
            backInput: '$?',
            out: '$?',
            forward: '$?',
            forwardInput: '$?',
            present: '$?',
            start: '$?',
            reset: '$?',
            home: '$?',
            revert: '$?',
            set: '$?',
            fullscreen: '$?',
            collapse: '$?',
            expand: '$?',
            close: '$?',
            language: '$?',
            horizontal: '$?',
            vertical: '$?',
            freeform: '$?',
            fit: '$?',
            grid: '$?',
            addPose: '$?',
            removePose: '$?',
            movePoseUp: '$?',
            movePoseDown: '$?',
            addPhrase: '$?',
            addGroup: '$?',
            removeContent: '$?',
            moveContentUp: '$?',
            moveContentDown: '$?',
            editContent: '$?',
            sequence: '$?',
            animate: '$?',
            addSource: '$?',
            deleteSource: '$?',
            deleteProject: '$?',
            editProject: '$?',
            settings: '$?',
            newProject: '$?',
            dark: '$?',
            chooserExpand: 'expandir/colapsar',
            place: 'mover salida',
            paint: 'salida de pintura',
            nextLesson: '$?',
            previousLesson: '$?',
            nextLessonStep: '$?',
            previousLessonStep: '$?',
            revertProject: '$?',
        },
        prompt: {
            deleteSource: '$?',
            deleteProject: '$?',
        },
        labels: {
            learn: '$?',
            nodoc: '$?',
            mixed: '$?',
            computed: '$?',
            default: '$?',
            inherited: '$?',
            notSequence: '$?',
            notContent: '$?',
            anonymous: '$?',
        },
        tiles: {
            output: '💬',
            docs: '📕',
            palette: '🎨',
        },
        headers: {
            learn: '$?',
            editing: '¡edítame!',
            projects: 'Funcións',
            examples: 'ejemplos',
        },
        section: {
            project: 'función',
            conflicts: 'conflictos',
            timeline: 'línea de tiempo',
            toolbar: 'herramientas',
            output: 'producción',
            palette: 'paleta',
            editor: 'editora',
        },
        feedback: {
            unknownProject: 'No hay ningún proyecto con este ID.',
        },
        login: {
            header: '$?',
            prompt: '$?',
            anonymousPrompt: '$?',
            submit: '$?',
            enterEmail: '$?',
            sent: '$?',
            success: '$?',
            failure: '$?',
            expiredFailure: '$?',
            invalidFailure: '$?',
            emailFailure: '$?',
            logout: '$?',
            offline: '$?',
        },
        edit: {
            wrap: 'envolver',
            unwrap: 'desenvolver',
            bind: 'nombra esta expresión',
        },
        error: {
            tutorial: '$?',
        },
    },
    input: {
        Random: {
            doc: '$?',
            names: ['Azar'],
            min: { names: 'mínima', doc: '$?' },
            max: { names: 'maximo', doc: '$?' },
        },
        Choice: {
            doc: '$?',
            names: ['Selección', 'Elección'],
        },
        Button: {
            doc: '$?',
            names: ['Botón'],
            down: { names: 'abajo', doc: '$?' },
        },
        Pointer: {
            doc: '$?',
            names: ['Puntero'],
        },
        Key: {
            doc: '$?',
            names: ['Teclado'],
            key: { names: 'tecla', doc: '$?' },
            down: { names: 'abajo', doc: '$?' },
        },
        Time: {
            doc: '$?',
            names: ['Tiempo'],
            frequency: {
                names: ['frecuencia'],
                doc: '$?',
            },
        },
        Mic: {
            doc: '$?',
            names: ['Micrófono', '🎤'],
            frequency: {
                names: ['frecuencia'],
                doc: '$?',
            },
        },
        Camera: {
            doc: '$?',
            names: ['Cámara'],
            width: {
                names: ['ancho'],
                doc: '$?',
            },
            height: {
                names: ['altura'],
                doc: '$?',
            },
            frequency: {
                names: ['frecuencia'],
                doc: '$?',
            },
        },
        Reaction: {
            names: 'reacción',
            doc: '$?',
        },
        Motion: {
            names: 'movimiento',
            doc: '$?',
            type: {
                doc: '$?',
                names: 'tipo',
            },
            vx: {
                doc: '$?',
                names: 'vx',
            },
            vy: {
                doc: '$?',
                names: 'vy',
            },
            vz: {
                doc: '$?',
                names: 'vz',
            },
            vangle: {
                doc: '$?',
                names: 'vangle',
            },
            mass: {
                doc: '$?',
                names: 'masa',
            },
            bounciness: {
                doc: '$?',
                names: 'rebote',
            },
            gravity: {
                doc: '$?',
                names: 'gravedad',
            },
        },
    },
    output: {
        Type: {
            names: 'tipo',
            doc: '$?',
            size: { doc: '$?', names: 'tamaño' },
            family: { doc: '$?', names: 'fuente' },
            place: { doc: '$?', names: 'place' },
            rotation: { doc: '$?', names: 'rotación' },
            name: { doc: '$?', names: 'nombre' },
            selectable: { doc: '$?', names: 'seleccionable' },
            enter: { doc: '$?', names: 'ingresar' },
            rest: { doc: '$?', names: 'descansar' },
            move: { doc: '$?', names: 'mover' },
            exit: { doc: '$?', names: 'salida' },
            duration: { doc: '$?', names: ['duración'] },
            style: { doc: '$?', names: 'estilo' },
        },
        Stage: {
            names: 'Verso',
            doc: '$?',
            description: '$?',
            content: { doc: '$?', names: 'contenido' },
            background: { doc: '$?', names: 'fondo' },
            frame: { doc: '$?', names: 'marco' },
        },
        Group: {
            names: 'Group',
            doc: '$?',
            content: { doc: '$?', names: 'content' },
            layout: { doc: '$?', names: 'layout' },
        },
        Phrase: {
            names: ['💬', 'Frase'],
            doc: '$?',
            text: { doc: '$?', names: 'texto' },
        },
        Arrangement: {
            names: ['Arrangement'],
            doc: '$?',
        },
        Row: {
            names: ['Fila'],
            doc: '$?',
            description: '$?',
            padding: { doc: '$?', names: 'relleno' },
        },
        Stack: {
            names: 'Pila',
            doc: '$?',
            description: '$?',
            padding: { doc: '$?', names: 'relleno' },
        },
        Grid: {
            names: 'cuadrícula',
            doc: '$?',
            description: 'cuadrícula de $1 fila, $2 columnas',
            rows: { doc: '$?', names: 'fila' },
            columns: { doc: '$?', names: 'columnas' },
            padding: { doc: '$?', names: 'relleno' },
            cellWidth: { doc: '$?', names: 'anchodecelda' },
            cellHeight: { doc: '$?', names: 'alturadecelda' },
        },
        Free: {
            names: 'Suelto',
            doc: '$?',
            description: 'forma libre, $1 producción',
        },
        Shape: {
            names: 'forma',
            doc: '$?',
        },
        Rectangle: {
            names: 'Rectángulo',
            doc: '$?',
            left: { doc: '$?', names: 'izquierda' },
            top: { doc: '$?', names: 'masalta' },
            right: { doc: '$?', names: 'derecha' },
            bottom: { doc: '$?', names: 'abajo' },
        },
        Pose: {
            names: 'Pose',
            doc: '$?',
            duration: { doc: '$?', names: 'duración' },
            style: { doc: '$?', names: 'estilo' },
            color: { doc: '$?', names: 'color' },
            opacity: { doc: '$?', names: 'opacidad' },
            offset: { doc: '$?', names: 'offset' },
            tilt: { doc: '$?', names: 'inclinación' },
            scale: { doc: '$?', names: 'escala' },
            flipx: { doc: '$?', names: 'voltearx' },
            flipy: { doc: '$?', names: 'volteary' },
        },
        Color: {
            names: 'Color',
            doc: '$?',
            lightness: { doc: '$?', names: ['luminosidad'] },
            chroma: { doc: '$?', names: ['croma'] },
            hue: { doc: '$?', names: ['matiz'] },
        },
        Sequence: {
            names: 'Secuencia',
            doc: '$?',
            timing: { doc: '$?', names: 'timing' },
            count: { doc: '$?', names: 'count' },
            poses: { doc: '$?', names: 'poses' },
        },
        Place: {
            names: ['Posición'],
            doc: '$?',
            x: { doc: '$?', names: 'x' },
            y: { doc: '$?', names: 'y' },
            z: { doc: '$?', names: 'z' },
        },
        Easing: {
            straight: 'lineal',
            cautious: 'precavida',
            pokey: 'lenta',
            zippy: 'enérgico',
        },
    },
    animation: {
        sway: {
            doc: '$?',
            names: ['vaivén'],
            angle: { doc: '$?', names: ['ángulo'] },
        },
        bounce: {
            doc: '$?',
            names: ['rebotar'],
            height: { doc: '$?', names: ['altura'] },
        },
        spin: {
            doc: '$?',
            names: ['girar'],
        },
        fadein: {
            doc: '$?',
            names: ['revelar'],
        },
        popup: {
            doc: '$?',
            names: ['surgir'],
        },
        shake: {
            doc: '$?',
            names: ['agitar'],
        },
    },
};

export default es;
